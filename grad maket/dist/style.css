@font-face {
  font-family: 'montserrat';
  src: url(../fonts/Montserrat-Black.ttf); }

@font-face {
  font-family: 'roboto';
  src: url(../fonts/Roboto-Black.ttf); }

@font-face {
  font-family: 'roboto-light';
  src: url(../fonts/Roboto-LightItalic.ttf); }

@font-face {
  font-family: 'kaushan';
  src: url(../fonts/KaushanScript-Regular.ttf); }

* {
  -webkit-box-sizing: border-box;
          box-sizing: border-box; }

body {
  margin: 0;
  padding: 0;
  font-family: 'montserrat'; }

.container {
  max-width: 1230px;
  padding: 0 15px;
  margin: 0 auto;
  text-align: center; }

.banner {
  background-image: url(../img/banner-img.png);
  background-size: cover; }
  .banner__content {
    padding-top: 2.07561vw;
    padding-bottom: 2.07561vw; }
  .banner__wrapper {
    background: url(../img/banner-bg.png);
    opacity: 0.9; }
  .banner__header {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    -webkit-box-align: baseline;
        -ms-flex-align: baseline;
            align-items: baseline; }
  .banner__logo {
    color: #fff;
    font-size: 30px; }
  .banner__button {
    margin-top: 0;
    margin-bottom: 11.48999vw; }
  .banner__nav {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    color: #fff;
    text-transform: uppercase;
    opacity: 0.9; }
    .banner__nav-item {
      width: 23.5%;
      border-top: 3px solid #fff;
      text-align: left;
      padding-top: 1.7791vw;
      padding-bottom: 0; }

.menu__icon {
  width: 18px;
  height: 18px; }

.link {
  text-decoration: none;
  text-transform: uppercase;
  color: #fff;
  font-size: 9.9px; }

.heading__first {
  color: #333;
  font-family: 'kaushan';
  font-size: 24px; }
  .heading__first_big {
    color: #fff;
    font-size: 72px; }

.heading__secondary {
  color: #333;
  font-size: 30px;
  text-transform: uppercase; }
  .heading__secondary_big {
    color: #fff;
    font-size: 150px; }

.line {
  border: 1.5px solid #f38181;
  width: 60px;
  margin: 0 auto;
  margin-top: 2.96516vw;
  margin-bottom: 3.3358vw; }
  .line_light {
    border-color: #fff; }

.button {
  background: #eec788;
  border: 3px solid #fff;
  padding: 15px 0; }
  .button__item {
    font-family: 'montserrat';
    font-size: 10.95px;
    padding: 15px 34px; }

.about__content {
  padding-top: 6.67161vw;
  padding-bottom: 8.00593vw; }

.about__photo {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
      -ms-flex-pack: justify;
          justify-content: space-between;
  margin-top: 7.4129vw;
  margin-bottom: 0; }

.photo {
  max-width: 28.16901vw;
  max-height: 18.53225vw;
  background: #95e1d3;
  position: relative; }
  .photo:hover .photo__item {
    background: url(../img/about-screen.png); }

.text {
  font-family: 'roboto';
  color: #999;
  font-size: 15px;
  font-weight: 400;
  max-width: 79.5%;
  margin: 0 auto; }

.facts {
  background: #95e1d3; }
  .facts__numbers {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex; }
  .facts__number {
    width: 19.66%;
    border-left: 2px solid #fff; }
    .facts__number:last-of-type {
      border-right: 2px solid #fff; }

.number {
  text-align: center;
  color: #fff;
  padding-top: 6.67161vw;
  padding-bottom: 6.67161vw; }
  .number__summ {
    font-size: 51.9px; }
  .number__text {
    font-size: 10.05px;
    text-transform: uppercase; }

.services {
  padding-top: 8.15419vw;
  padding-bottom: 8.89548vw; }
  .services__options {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-wrap: wrap;
        flex-wrap: wrap;
    -webkit-box-pack: justify;
        -ms-flex-pack: justify;
            justify-content: space-between;
    padding-left: 31px;
    padding-right: 31px; }
  .services__option {
    width: 33%; }
    .services__option:nth-child(n+4) {
      padding-top: 6.67161vw; }

.option {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-align: start;
      -ms-flex-align: start;
          align-items: flex-start; }
  .option__icon {
    width: 44px; }
  .option__content {
    text-align: left;
    padding-left: 27px;
    padding-right: 75px; }
  .option__header {
    color: #333;
    text-transform: uppercase;
    padding-top: 0;
    padding-bottom: 20px; }
  .option__text {
    color: #999;
    font-size: 10.05px; }

.future {
  background: url(../img/future-img.png);
  background-size: cover; }
  .future__wrapper {
    background: rgba(255, 255, 255, 0.85); }
  .future__content {
    padding-top: 8.15419vw;
    padding-bottom: 0; }
  .future__img {
    margin: 0 auto;
    max-width: 35.35953vw; }
    .future__img-item {
      position: relative;
      background: url(../img/display_bg_768x1024.png);
      background-size: cover;
      max-width: 35.35953vw;
      min-width: 35.35953vw;
      min-height: 43.14307vw; }
    .future__img-item_small {
      position: absolute;
      bottom: -6.74574vw;
      right: -11.86064vw;
      max-width: 20.31134vw;
      min-width: 20.31134vw;
      min-height: 31.87546vw; }

.services2__content {
  padding-top: 7.4129vw;
  padding-bottom: 0; }

.services2__presentation {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  padding-top: 6.81987vw;
  padding-bottom: 8.89548vw; }

.presentation__img {
  background: url(../img/services2.png) no-repeat;
  max-width: 34.84062vw;
  min-width: 34.84062vw;
  min-height: 28.16901vw; }

.presentation__form {
  margin-left: 15px; }

.presentation__content {
  border: 1px solid #999;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.presentation__header {
  text-transform: uppercase;
  font-size: 10.05px;
  color: #333; }

.team__content {
  padding-top: 7.4129vw;
  padding-bottom: 8.52483vw; }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
